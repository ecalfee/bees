# looking at diversity within A, C, and M ancestry, pi within, and Fst between populations,
# as we move away from the origin of the Africanized honey bee invasion in Brazil

# steps
# (0) CALL HOMOZYGOUS ANCESTRY TRACTS for AA/CC/MM ancestry above 0.8 posterior probability of having homozygous ancestry across those tracts
output: (e.g.)
local_ancestry/results/tracts/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/AA/CA1207.bed'
# (1) Get bam reads that overlap tracts:
# small test -- works great!
bees/within_ancestry$ parallel './getBamsForTracts.sh {1} {2} {3} thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot' ::: CA1207 ::: 3 :::+ CC
# all files:
within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/get_BAMS_AA_CC_MM_ancestry_tracts_0.8.log './getBamsForTracts.sh {1} {2} {3} thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot' :::: ../bee_samples_listed/byPop/pops_included.IDs ::: 3 6 8 :::+ CC MM AA &> logs/get_BAMS_AA_CC_MM_ancestry_tracts_0.8.out &
[1] 2874

# (2) calculate pi for each population in ANGSD
# quick test file:
RUNNING (looks like it's working but may take up to a few hours per pop per ancestry)
./pi_within_ancestry.sh AR01 CC thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot ../bee_samples_listed/byPop/AR01.list

# run admixed populations - get pi within ancestry.
bees/within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/calc_pi_within_ancestry.log './pi_within_ancestry.sh {2} {1} thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot ../bee_samples_listed/byPop/{2}.list' ::: AA CC MM :::: ../bee_samples_listed/byPop/pops_included.list &> logs/calc_pi_within_ancestry.out &
[1] 29414 - RUNNING 8.2.19

# run reference populations, using all reads
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_pi_all.log './pi.sh {1} ../bee_samples_listed/byPop/{1}.list' :::: ../bee_samples_listed/byPop/pops_included_plus_ACM.list &> logs/calc_pi_all.out &
[4] 13830 - RUNNING 8.2.19

# ALTERNATIVELY, I could use the called SNPs for Fst, and get allele freq's for each pop at each of those called SNPs, (filtering w/in ancestry), and quickly calculate Fst etc. from that. This would help me quickly scan for any 'smoking gun' functional differences too. BUT I would miss a new mutation not in this set of alleles, so IF any outliers look like they drop a lot of diversity within ancestry, like a hard sweep, it's also worth looking at those outlier regions using all SNPs from ANGSD and not just previously called SNPs.
# Get all SNPs in a useable 'sites' file for ANGSD:
# filters to only > .05 MAF at start and no non ACGT alleles
data/bees_new_positions$ awk '$3>=.05 && $5!='0' && $6!='0' {print $0}' ALL.bim | cut -f2,5,6 | tr "." "\t" | awk '{print $2"."$3"\t"$4"\t"$5"\t"$6}' > ALL.var.sites
# index this variant sites file for angsd:
data/bees_new_positions$ angsd sites index ALL.var.sites
# calculate allele frequencies at all those SNPs using simple counts:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry.log './allele_freq_within_ancestry.sh {2} {1} thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot ../bee_samples_listed/byPop/{2}.list ../data/bees_new_positions/ALL.var.sites' ::: AA CC MM :::: ../bee_samples_listed/byPop/pops_included.list &> logs/calc_allele_freq_within_ancestry.out &
[2] 1142 - RUNNING 8.2.19. COMPLETED.
# TO DO: get allele freq's for reference bees too, so I can calculate Fst and have a reference for expected diversity pi (e.g. shouldn't exceed or ancestry calls are off).
# really I want allele freq's for all populations at all the SNPs (across ancestries)
(!) NOTE - I may have swapped major/minor alleles when going from plink to sites file
# because the reference should match the major allele most of the time, not the minor
# get allele freqs at snps for all bees at all sites (ignoring ancestry)
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_all.log './allele_freq.sh {1} ../bee_samples_listed/byPop/{1}.list ../data/bees_new_positions/ALL.var.sites' :::: ../bee_samples_listed/byPop/pops_included_plus_ACM.list &> logs/calc_allele_freq_all.out &
[3] 9833 - RUNNING 8.2.19. COMPLETED.

# translate allele freqs over to all sites (including NA for no data):
# across all ancestries:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/combine_allele_freq_all.log 'Rscript ./combine_pop_allele_freqs.R {1} results/allele_freq_all ../data/bees_new_positions/ALL.var.sites' :::: ../bee_samples_listed/byPop/pops_included_plus_ACM.list &> logs/combine_allele_freq_all.out &
[1] 3151 - RUNNING 8.5.19
# for each ancestry separately:
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/combine_allele_freq_within_ancestry.log 'Rscript ./combine_pop_allele_freqs.R {2} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{1}/allele_freq  ../data/bees_new_positions/ALL.var.sites' ::: AA CC MM :::: ../bee_samples_listed/byPop/pops_included.list &> logs/combine_allele_freq_within_ancestry.out &
[2] 3855 - RUNNING 8.5.19

# TO DO: paste results together across populations to get 1 file. possibly filter to 1/10 of data before loading into R for genome-wide estimate.
# Plot these first, but then use ANGSD to just get a random subset of the genome
# and pi/Fst across the top outliers for shared ancestry

# for some reason these summary files will not be created in parallel easily:
bees/within_ancestry$ for anc in AA CC MM; do paste $(for i in $(cat ../bee_samples_listed/byPop/pops_included.list); do echo results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/$anc/allele_freq/$i.freqs.txt; done ) | awk 'NR == 1 || NR % 100 == 0' > results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/$anc/allele_freq/pops_included_every100th_SNP.freqs.txt; done
bees/within_ancestry$ for anc in AA CC MM; do paste $(for i in $(cat ../bee_samples_listed/byPop/pops_included.list); do echo results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/$anc/allele_freq/$i.nInd; done ) | awk 'NR == 1 || NR % 10 == 0' > results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/$anc/allele_freq/pops_included_every10th_SNP.nInd; done

# for across all ancestry frequencies
/results/allele_freq_all$ paste $(for i in $(cat /media/erin/8TB/Documents/gitErin/bees/bee_samples_listed/byPop/pops_included_plus_ACM.list); do echo $i.freqs.txt; done ) | awk 'NR == 1 || NR % 100 == 0' > pops_included_plus_ACM_every100th_SNP.freqs.txt
/results/allele_freq_all$ paste $(for i in $(cat /media/erin/8TB/Documents/gitErin/bees/bee_samples_listed/byPop/pops_included_plus_ACM.list); do echo $i.freqs.txt; done ) | awk 'NR == 1 || NR % 10 == 0' > pops_included_plus_ACM_every10th_SNP.freqs.txt
/results/allele_freq_all$ paste $(for i in $(cat /media/erin/8TB/Documents/gitErin/bees/bee_samples_listed/byPop/pops_included_plus_ACM.list); do echo $i.nInd; done ) | awk 'NR == 1 || NR % 100 == 0' > pops_included_plus_ACM_every100th_SNP.nInd
/results/allele_freq_all$ paste $(for i in $(cat /media/erin/8TB/Documents/gitErin/bees/bee_samples_listed/byPop/pops_included_plus_ACM.list); do echo $i.nInd; done ) | awk 'NR == 1 || NR % 10 == 0' > pops_included_plus_ACM_every10th_SNP.nInd

# alternatively, I could take subsets of the SNPs, or filter by # in pop. with data
# TO DO: I could also do PCA instead of all pairwise Fst's, at least to start

# (3) calculate Fst between populations for all pairs in just a subset of 2 CA pops and 3 AR pops, and reference bees A/C/M, also in ANGSD

# (4) get allele frequencies for each population and each ancestry



# For outlier regions, I want to confirm ancestry by getting pi and Fst
# combined across all ancestries for my groups: NA_1, NA_2, SA_0, SA_1, SA_2,
# all NA (NA_3), all SA (SA_3), A, C, and M.
# first test parallel for pulling out column ID's by their name:
within_ancestry$ parallel --header : --colsep '\t' echo sample={pop} region={region_n} chr={chr} :::: groups_theta.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed
# works great!
# now run script:
# I add a 20kb buffer to either side of the putative selected region, looking for return to neutral background
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/calc_pi_outliers.log --header : --colsep '\t' 'echo group={pop} region={region}, n={region_n}; ./calc_theta_regions.sh {pop} ../bee_samples_listed/byPop/{pop}.list {region} {region_n}' :::: groups_theta.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_pi_outliers.out &
[1] 4083 - RUNNING 8.10.19 (will take a few hours). COMPLETED. check files because of 'failed' terms in log.

# now get Fst for these outlier regions:
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/calc_fst_outliers.log --header : --colsep '\t' 'echo pop1={pop1} pop2={pop2} region={region} region_n={region_n}; ./calc_pairwise_fst.sh {pop1} {pop2} results/outlier_regions/region_{region_n}/combined/' :::: pairs_fst.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_fst_outliers.out &
[2] 14414 - RUNNING 8.12.19. Accidentally rerunning:
[1] 27092 - 8.12.19


# now calculate pi and fst within ancestry for outliers:
# starting with pi for just combined NA and SA groups:


within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/calc_pi_outliers_NA_SA_3_within_ancestry.log --header : --colsep '\t' 'echo group={pop} region={region}, n={region_n}; ./calc_theta_regions_within_ancestry.sh {pop} ../bee_samples_listed/byPop/{pop}.list {region} {region_n} {ancestry} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{ancestry}/bams' :::: AA_MM_CC.list :::: NA_SA_3.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_pi_outliers_NA_SA_3_within_ancestry.out &
 :( FOLDED SFS [3] 12118 - RUNNING 8.10.19. check results log looks ok but .out has some 'failed' terms
plus these files have empty sfs files:
AA - 5 Group1.21:180923-220357, 16 Group1.23:563676-564830
CC - 37 Group6.30:3617-5122
# REPEATING ALL WITH UNFOLDED SFS (to get accurate Fst later):
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_pi_outliers_NA_SA_3_within_ancestry_unfolded.log --header : --colsep '\t' 'echo group={pop} region={region}, n={region_n}; ./calc_theta_regions_within_ancestry.sh {pop} ../bee_samples_listed/byPop/{pop}.list {region} {region_n} {ancestry} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{ancestry}/bams' :::: AA_MM_CC.list :::: NA_SA_3.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_pi_outliers_NA_SA_3_within_ancestry_unfolded.out &
[3] 30307 - RUNNING 8.14.19


# just the fails:
within_ancestry$ nohup parallel --noswap --jobs 2 --header : --colsep '\t' --joblog logs/calc_pi_outliers_NA_SA_3_within_ancestry_repeat_failed.log \
'echo group={pop} region={region}, n={region_n}; ./calc_theta_regions_within_ancestry.sh {pop} \
../bee_samples_listed/byPop/{pop}.list {region} {region_n} {ancestry} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{ancestry}/bams' \
::: ancestry AA AA CC :::+ region_n 5 16 37 \
:::+ region Group1.21:180923-220357 Group1.23:563676-564830 Group6.30:3617-5122 \
:::: NA_SA_3.list &> logs/calc_pi_outliers_NA_SA_3_within_ancestry_repeat_failed.out &
 :( FOLDED SFS [1] 31772 - RUNNING 8.12.19. THERE WERE SOME SEG FAULTS AND CORE DUMPS -- POSSIBLY THIS IS RESOLVED IN THE NEWEST VERSION OF ANGSD AND I CAN JUST RERUN FROM THETA_STAT AND NOT THE WHOLE THING OTHERWISE :/

# calculate Fst within ancestry for all outlier regions:
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/calc_fst_outliers_NA_SA_3_within_ancestry.log --header : --colsep '\t' 'echo pop1={pop1} pop2={pop2} region={region}, n={region_n}; ./calc_pairwise_fst.sh {pop1} {pop2} results/outlier_regions/region_{region_n}/{ancestry}' :::: AA_MM_CC.list :::: NA_SA_3.list :::: pairs_fst.list :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_fst_outliers_NA_SA_3_within_ancestry.out &
 :( FOLDED SFS [1] 22093 - RUNNING 8.13.19. oops needs to find correct directory for A/C/M files. redone:
 :( FOLDED SFS [1] 454 - RUNNING 8.13.19. KILLED because repeating more often due to NA_SA_3.list unnecessarily in there:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_fst_outliers_NA_SA_3_within_ancestry.log --header : --colsep '\t' 'echo pop1={pop1} pop2={pop2} region={region}, n={region_n}; ./calc_pairwise_fst.sh {pop1} {pop2} results/outlier_regions/region_{region_n}/{ancestry}' :::: AA_MM_CC.list :::: pairs_fst_NA_SA_only.list  :::: ../functional_analysis/results/outlier_regions/all.plus20kb.bed &> logs/calc_fst_outliers_NA_SA_3_within_ancestry.out &
 :( FOLDED SFS [3] 27124 # COMPLETED 8.13.19 - 924 calls, but each only a few seconds, should take a few hours.
 :( FOLDED SFS # ALSO, A FEW HAVE VERY SHORT RUN TIMES I THINK BECAUSE SEG FAULTS FROM ABOVE, NO SFS FILE

# NOTE: OOPS! The 20kb file didn't actually have any 20kb buffer added (mistake) .. I'll have to remake
# I will keep the files above, knowing they have no buffer, and remake the non-outlier regions:


# now get a set of neutral non-outlier regions to calculate background Fst
# in total, I generate 1Mb in short non-overlapping 100bp regions spread randomly across
# all non-outlier regions of the genom:
within_ancestry$ bedtools random -seed 600 -n 10000 -l 100 -g ../data/honeybee_genome/genome_order_scaffolds_chr_only.lengths | bedtools shuffle -seed 200 -i stdin -excl ../functional_analysis/results/outlier_regions/all.plus20kb.noHeader.bed -noOverlapping -g ../data/honeybee_genome/genome_order_scaffolds_chr_only.lengths | bedtools sort -i stdin -faidx ../data/honeybee_genome/genome_order_scaffolds_chr_only.lengths > results/1Mb_of_non-outlier_100bp.bed
# convert to angsd 1-index instead of bed 0-indexing and ANGSD format chr:start-end :
within_ancestry$ awk '{print $1":"$2+1"-"$3}' results/1Mb_of_non-outlier_100bp.bed > results/1Mb_of_non-outlier_100bp.regions

# calculate background pi
# quick test (starts up ok):
./calc_theta_random_background.sh A ../bee_samples_listed/byPop/A.list 1Mb_of_non-outlier_100bp combined ../filtered_bams/results_Amel4.5
# running all:
within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/calc_pi_random_background.log --header : --colsep '\t' 'echo group={pop}; ./calc_theta_random_background.sh {pop} ../bee_samples_listed/byPop/{pop}.list 1Mb_of_non-outlier_100bp combined ../filtered_bams/results_Amel4.5' :::: groups_theta.list &> logs/calc_pi_random_background.out &
 :( FOLDED SFS [2] 8957 - RUNNING 8.10.19. No progress in 2 days. Maybe too large
 :( FOLDED SFS # KILLED. CREATING HUGE FILES. I NEED TO LOOK AT THEM (!). Regions need to be specified chr:start-end (!). If fixed the regions file and am re-running (should be WAY faster!):
 :( FOLDED SFS [2] 7007 - COMPLETED 8.13.19. NOW RUNNING UNFOLDED SFS:
[1] 16353 - RUNNING 8.14.19

# and calculate background fst:
within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/calc_fst_1Mb_random_background.log --header : --colsep '\t' 'echo pop1={pop1} pop2={pop2}; ./calc_pairwise_fst.sh {pop1} {pop2} results/non-outlier_regions/1Mb_of_non-outlier_100bp/combined/' :::: pairs_fst.list &> logs/calc_fst_1Mb_random_background.out &
 :( FOLDED SFS [1] 10255 - ERRORS - NO FILES 8.14.19

# Calculate background pi within ancestry for just NA_3 and SA_3:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_pi_NA_SA_1Mb_random_background.log --header : --colsep '\t' 'echo group={pop} ancestry={ancestry}; ./calc_theta_random_background.sh {pop} ../bee_samples_listed/byPop/{pop}.list 1Mb_of_non-outlier_100bp {ancestry} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{ancestry}/bams' :::: AA_MM_CC.list :::: NA_SA_3.list &> logs/calc_pi_NA_SA_1Mb_random_background.out &
 :( FOLDED SFS [4] 16698 - COMPLETED 8.13.19. NOW RUNNING UNFOLDED SFS:
[2] 654 - RUNNING 8.14.19

# Calculate background fst within ancestry for NA_3 and SA_3:
within_ancestry$ nohup parallel --noswap --jobs 2 --joblog calc_fst_within_ancestry_NA_SA_1Mb_random_background.log --header : --colsep '\t' 'echo pop1={pop1} pop2={pop2}; ./calc_pairwise_fst.sh {pop1} {pop2} results/non-outlier_regions/1Mb_of_non-outlier_100bp/combined/' :::: pairs_fst_NA_SA_only.list &> logs/calc_fst_within_ancestry_NA_SA_1Mb_random_background.out &
NOT RUN YET. WAITING 4 pi CALCS TO FINISH FIRST.

# Demographic inference of loss of heterozygosity overall and within ancestry:
# calculate pi within ancestry for background non-outliers:
# here start with AA ancestry and calculate pi for each individual population
# then after you can look at MM and CC ancestries
1Mb_of_non-outlier_100bp
within_ancestry$ nohup parallel --noswap --jobs 2 --joblog logs/calc_pi_all_pops_within_ancestry_1Mb_random_background.log './calc_theta_random_background.sh {2} ../bee_samples_listed/byPop/{2}.list 1Mb_of_non-outlier_100bp {1} results/thin1kb_common3/byPop/output_byPop_CMA_ne670000_scaffolds_Amel4.5_noBoot/{1}/bams' ::: AA MM CC :::: ../bee_samples_listed/byPop/pops_included.list &> logs/calc_pi_all_pops_within_ancestry_1Mb_random_background.out &
 :( FOLDED SFS [5] 22628 - COMPLETED 8.13.19

# get across all ancestries estimate:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_pi_all_pops_1Mb_random_background.log './calc_theta_random_background.sh {2} ../bee_samples_listed/byPop/{2}.list 1Mb_of_non-outlier_100bp {1} ../filtered_bams/results_Amel4.5' ::: combined :::: ../bee_samples_listed/byPop/pops_included.list &> logs/calc_pi_all_pops_1Mb_random_background.out &
 :( FOLDED SFS [5] 11628 - RAN 8.13.19

I CAN USE THETAS (within pop pi), BUT NOT FST FROM THE FOLDED SFS. I AM REMAKING THESE SCRIPTS & RERUNNING FOR THE UNFOLDED SFS. I am also downloading ANGSD v9.28 (latest) 8.14.19. 10:50am. The version update is hopefully to deal with segfaults.
SO I MOVED THE ORIGINAL FOLDED OUTPUTS TO HERE: results/folded_SFS_incorrect .
And I am re-running all sfs and 2D sfs, pi, and fst estimates:
Also, I should be able to calc dxy myself from the unfolded 2d sfs (arbitrarily polarized by ref genome).
# BACKGROUND FOR OUTLIERS:

# Pi:
# within-ancestry pi:
# Fst:
# within-ancestry fst:
# OUTLIERS:
# Pi:
# Fst:
# INDIVIDUAL POPS:
# first get slightly stricter ancestry segments:
# for an outlier region: calculate SFS, then pi, then Fst:

# -------------------------------------------------------------------------------------------------------#
# HAv3.1 newly mapped bams:
# Calculating allele freqs for A/C/M reference panels at all SNPs
# get allele freqs at snps for all bees at all sites (ignoring ancestry)
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/calc_allele_freq_all_HAv3.1.log './allele_freq.sh {1} {2} combined_sept19' :::: ../bee_samples_listed/byPop/pops_included_plus_ACM.list :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_all_HAv3.1.out &
[1] 21063 - RUNNING 9.17.19. OOPS I DELETED THESE OUTPUT FILES 9.28.19. I'll have to redo.

# making a symlink to all bams from within within_ancestry folder
# combined = combined across all ancestries
mkdir -p results/combined_sept19/combined/bams
within_ancestry$ for i in $(cat ../bee_samples_listed/combined_sept19.list); do ln -s /media/erin/8TB/Documents/gitErin/bees/filtered_bams/results/$i.sort.dedup.baq.bam results/combined_sept19/combined/bams/$i.sort.dedup.baq.bam; done
within_ancestry$ for i in $(cat ../bee_samples_listed/combined_sept19.list); do ln -s /media/erin/8TB/Documents/gitErin/bees/filtered_bams/results/$i.sort.dedup.baq.bam.bai results/combined_sept19/combined/bams/$i.sort.dedup.baq.bam.bai; done

# re-doing allele freq calculations for A/C/M reference pops
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_ACM_ref_HAv3.1.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' ::: A C M ::: combined :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_ACM_ref_HAv3.1.out &
[2] 17276 - RUNNING 9.28.19

# NOTE: I calculate allele freqs for all the pops except A/C/M below when I do within-ancestry allele freqs too


# using local_ancestry scripts I called high confidence AA/CC/MM HOMOZYGOUS ANCESTRY tracts for all bees,
e.g. local_ancestry/results/tracts/combined_sept19/A/CA1207.bed'

# Now I filter bams to only save reads that overlap these tracts:
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/get_BAMS_AA_CC_MM_ancestry_tracts_0.8_HAv3.1.log './getBamsForTracts.sh {1} {2} combined_sept19' :::: ../bee_samples_listed/byPop/combined_sept19_pops.IDs ::: C M A &> logs/get_BAMS_AA_CC_MM_ancestry_tracts_0.8_HAv3.1.out &
[1] 7443 - RUNNING 9.27.19. COMPLETED OVERNIGHT.

# then using reads from these bams, I calculate allele frequencies at all those SNPs using simple counts:
# I will do this by chromosome and then combined results with a SNP file to capture all SNPs, including NAs:
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/calc_allele_freq_within_ancestry_HAv3.1.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' :::: ../bee_samples_listed/byPop/combined_sept19_pops.list ::: A C M combined :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_within_ancestry_HAv3.1.out &
[1] 16091 - RUNNING 9.28.19. COMPLETED BUT SOME FAILED, e.g.
Stanislaus_2014 A combined_sept19 ../bee_samples_listed/byPop/Stanislaus_2014.list Group13
Group 2 riverside_2014 combined
results/combined_sept19/A/allele_freq/Group13/Stanislaus_2014.mafs.gz
results/combined_sept19/combined/allele_freq/Group2/Riverside_2014.mafs.gz
# trying a failed file by hand:
./allele_freq_within_ancestry.sh Riverside_2014 combined combined_sept19 ../bee_samples_listed/byPop/Riverside_2014.list Group2; Rscript ./combine_pop_allele_freqs.R Riverside_2014 combined_sept19 combined Group2 # worked just fine ..
within_ancestry$ cp logs/calc_allele_freq_within_ancestry_HAv3.1.out logs/calc_allele_freq_within_ancestry_HAv3.1_retry_failed.out
within_ancestry$ cp logs/calc_allele_freq_within_ancestry_HAv3.1.log logs/calc_allele_freq_within_ancestry_HAv3.1_retry_failed.log
within_ancestry$ nohup parallel --noswap --retry-failed --jobs 3 --joblog logs/calc_allele_freq_within_ancestry_HAv3.1_retry_failed.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' :::: ../bee_samples_listed/byPop/combined_sept19_pops.list ::: A C M combined :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_within_ancestry_HAv3.1_retry_failed.out &
[1] 7260 - RUNNING 9.28.19. Not sure the problem, but if it's because multiple threads are trying to access the same bams list file, I may have to redo all of them (not so bad..didn't take that long).

# To be safe, I'm just going to rerun the whole batch overnight on one thread:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry_HAv3.1_1thread.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' :::: ../bee_samples_listed/byPop/combined_sept19_pops.list ::: A C M combined :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_within_ancestry_HAv3.1_1thread.out &
[1] 9307 - RUNNING 9.28.19. COMPLETED. NOTE: 3 files had 1 or 0 snps with observations on a chromosome, and therefore failed in combine_pop_allele_freqs.R. I fix these below.
Problem files =
bees/within_ancestry$ awk '$7 > 0 {print $0}' logs/calc_allele_freq_within_ancestry_HAv3.1_1thread.log
323	:	1569728127.710	     0.754	0	195	1	0	./allele_freq_within_ancestry.sh Davis_2014 A combined_sept19 ../bee_samples_listed/byPop/Davis_2014.list Group3; Rscript ./combine_pop_allele_freqs.R Davis_2014 combined_sept19 A Group3
1882    :       1569746077.298       0.620      0       183     1       0       ./allele_freq_within_ancestry.sh AR27 C combined_sept19 ../bee_samples_listed/byPop/AR27.list Group10; Rscript ./combine_pop_allele_freqs.R AR27 combined_sept19 C Group10
1944    :       1569746880.534       0.700      0       183     1       0       ./allele_freq_within_ancestry.sh AR29 C combined_sept19 ../bee_samples_listed/byPop/AR29.list Group8; Rscript ./combine_pop_allele_freqs.R AR29 combined_sept19 C Group8
# yes, there are also 3 errors from R joining datasets:
within_ancestry/results/combined_sept19$ grep 'Error' ../../logs/calc_allele_freq_within_ancestry_HAv3.1_1thread.out
Error: Can't join on 'minor' x 'minor' because of incompatible types (logical / character)
Error: Can't join on 'chromo' x 'scaffold' because of incompatible types (logical / character)
Error: Can't join on 'chromo' x 'scaffold' because of incompatible types (logical / character)
I modified the script to accommodate no snps in .mafs.gz files and reran these files:
within_ancestry$ parallel 'Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' ::: Davis_2014 AR27 AR29 :::+ A C C :::+ Group3 Group10 Group8
# ran no problem. all done!

# put allele freqs together and reduce to every nth snp:
# every 100th snp
bees/within_ancestry$ for anc in A C M combined; do for j in {1..16}; do paste $(for i in $(cat ../bee_samples_listed/byPop/combined_sept19_pops.list); do echo results/combined_sept19/$anc/allele_freq/Group$j/$i.freqs.txt; done) | awk 'NR == 1 || NR % 100 == 0' > results/combined_sept19/$anc/allele_freq/Group$j/pops_included_every100th_SNP.freqs.txt; done; done
bees/within_ancestry$ for anc in A C M combined; do for j in {1..16}; do paste $(for i in $(cat ../bee_samples_listed/byPop/combined_sept19_pops.list); do echo results/combined_sept19/$anc/allele_freq/Group$j/$i.nInd; done) | awk 'NR == 1 || NR % 100 == 0' > results/combined_sept19/$anc/allele_freq/Group$j/pops_included_every100th_SNP.nInd; done; done
# every 10th snp
bees/within_ancestry$ for anc in A C M combined; do for j in {1..16}; do paste $(for i in $(cat ../bee_samples_listed/byPop/combined_sept19_pops.list); do echo results/combined_sept19/$anc/allele_freq/Group$j/$i.freqs.txt; done) | awk 'NR == 1 || NR % 10 == 0' > results/combined_sept19/$anc/allele_freq/Group$j/pops_included_every10th_SNP.freqs.txt; done; done
bees/within_ancestry$ for anc in A C M combined; do for j in {1..16}; do paste $(for i in $(cat ../bee_samples_listed/byPop/combined_sept19_pops.list); do echo results/combined_sept19/$anc/allele_freq/Group$j/$i.nInd; done) | awk 'NR == 1 || NR % 10 == 0' > results/combined_sept19/$anc/allele_freq/Group$j/pops_included_every10th_SNP.nInd; done; done
# ACM reference individuals:
bees/within_ancestry$ for type in nInd freqs.txt; do for j in {1..16}; do paste $(for i in A C M; do echo results/combined_sept19/combined/allele_freq/Group$j/$i.$type; done) | awk 'NR == 1 || NR % 100 == 0' > results/combined_sept19/combined/allele_freq/Group$j/ACM_every100th_SNP.$type; done; done
bees/within_ancestry$ for type in nInd freqs.txt; do for j in {1..16}; do paste $(for i in A C M; do echo results/combined_sept19/combined/allele_freq/Group$j/$i.$type; done) | awk 'NR == 1 || NR % 10 == 0' > results/combined_sept19/combined/allele_freq/Group$j/ACM_every10th_SNP.$type; done; done
# I will combine across chromosomes in the R script plot_pi_fst_from_allele_freqs.R


# Now also calculate allele freqs for NA and SA as groups within each ancestry, and also for all reads, regardless of ancestry:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry_NA_CA_HAv3.1_1thread.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' ::: NA SA ::: A C M combined :::: ../data/honeybee_genome/chr.names &> logs/calc_allele_freq_within_ancestry_NA_CA_HAv3.1_1thread.out &
[1] 767 - RUNNING 10.5.19. COMPLETED BUT SOME ERRORS:
within_ancestry$ awk '$7 > 0 {print $0}' logs/calc_allele_freq_within_ancestry_NA_CA_HAv3.1_1thread.log
# redo those few:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry_NA_CA_HAv3.1_1thread_take2.log './allele_freq_within_ancestry.sh {1} {2} combined_sept19 ../bee_samples_listed/byPop/{1}.list {3}; Rscript ./combine_pop_allele_freqs.R {1} combined_sept19 {2} {3}' :::+ SA :::+ A A M :::+ Group13 Group16 Group2 &> logs/calc_allele_freq_within_ancestry_NA_CA_HAv3.1_1thread_take2.out &
[1] 30364 - RUNNING 10.6.19. hmm..possibly getting killed due to memory issues..I'll have to check on it.
within_ancestry$ grep 'Killed' -A 20 logs/*.out # many results
NC_037648.1:12500000-17500000
# Instead, I'm going to just focus on outlier regions:
functional_analysis/results/outlier_regions/all.bed
# sites file, regions file, A C M combined, all ind's genotype likelihoods for PCA,
# SA NA and A C M for allele frequencies
# if you can't get genomewide to run,
# alternatively identify 1Mb randomly throughout genome (excluding outlier loci),
# spread across 100 10 kb chunks.
# redo PCA with original PCA snps, but within ancestry comparisons in the pca.

# 1st I need to make lists of bams to include for within-ancestry:
bee_samples_listed/byPop$ parallel '(for i in $(cat combined_sept19_pops.{2}.IDs); do echo ../within_ancestry/results/combined_sept19/{1}/bams/$i.sort.dedup.baq.bam; done) > combined_sept19_pops.{2}.{1}.bams' ::: A C M ::: SA NA
bee_samples_listed/byPop$ parallel '(for i in $(cat combined_sept19_pops.IDs); do echo ../within_ancestry/results/combined_sept19/{1}/bams/$i.sort.dedup.baq.bam; done) > combined_sept19_pops.{1}.bams' ::: A C M
# and make symlinks for ACM reference bees to each of the A/ C/ and M/ ancestry directories so they're included
within_ancestry$ parallel 'for i in $(cat ../bee_samples_listed/byPop/{1}.list); do ln -s /media/erin/8TB/Documents/gitErin/bees/filtered_bams/results/$i.sort.dedup.baq.bam results/combined_sept19/{2}/bams/$i.sort.dedup.baq.bam; done' ::: A C M ::: A C M
within_ancestry$ parallel 'for i in $(cat ../bee_samples_listed/byPop/{1}.list); do ln -s /media/erin/8TB/Documents/gitErin/bees/filtered_bams/results/$i.sort.dedup.baq.bam.bai results/combined_sept19/{2}/bams/$i.sort.dedup.baq.bam.bai; done' ::: A C M ::: A C M

# 2 MAIN OUTLIERS:
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier1_chr1 outlier2_chr11 :::+ NC_037638.1:5000000-15000000 NC_037648.1:12500000-17500000 :::+ Group1 Group11 ::: A C M NA.A NA.C NA.M SA.A SA.C SA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS.out &
[1] 19691 - RUNNING 10.19.19. ARGH. Many jobs killed randomly -- not in error log but they were maybe < half-way through
grep 'Killed' logs/calc_allele_freq_within_ancestry_2OUTLIERS.out
TRY AGAIN. P = 4 threads, running only 1 job at a time:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier1_chr1 outlier2_chr11 :::+ NC_037638.1:5000000-15000000 NC_037648.1:12500000-17500000 :::+ Group1 Group11 ::: NA.A NA.C NA.M SA.A SA.C SA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS.out &
[1] 20700. STILL ISSUES :(. DIVIDING TASK INTO SMALLER PARTS BELOW FOR LARGER SA SAMPLE SET:
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_NAoutlier2.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier2_chr11 :::+ NC_037648.1:12500000-17500000 :::+ Group11 ::: NA.A NA.C NA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_NAoutlier2.out &
[1] 3017 - COMPLETED, NO PROBLEMS
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_SA_ABCDE.out.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier1_chr1_A outlier1_chr1_B outlier1_chr1_C outlier1_chr1_D outlier1_chr1_E outlier2_chr11_A outlier2_chr11_B outlier2_chr11_C outlier2_chr11_D outlier2_chr11_E :::+ NC_037638.1:5000000-7000000 NC_037638.1:7000001-9000000 NC_037638.1:9000001-11000000 NC_037638.1:11000001-13000000 NC_037638.1:13000001-15000000 NC_037648.1:12500000-13500000 NC_037648.1:13500001-14000000 NC_037648.1:14500001-15500000 NC_037648.1:15500001-17500000 :::+ Group1 Group1 Group1 Group1 Group1 Group11 Group11 Group11 Group11 Group11 ::: SA.A SA.C SA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_SA_ABCDE.out &
[1] 23407 - RUNNING. I WILL HAVE TO CONCATENATE RESULTS INTO 1 FILE AT THE END. OOPS File D still didn't run for outlier 1, re-doing just that one:
within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo2_SA_D.out.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier1_chr1_D1 outlier1_chr1_D2 :::+ NC_037638.1:11000001-12000000 NC_037638.1:12000001-13000000 :::+ Group1 Group1 ::: SA.A SA.C SA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo2_SA_D.out &
[1] 18880 - RAN 10.19.19. REDOING A FEW OF THE EARLIER ONES -- MESSED UP RANGES, redo chr11 outlier2:
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_SA_chr11ABCD.out.log './allele_freq_within_ancestry_outliers.sh {1} {4} {2} combined_sept19 {3}' ::: outlier2_chr11_A outlier2_chr11_B outlier2_chr11_C outlier2_chr11_D :::+ NC_037648.1:12500000-13500000 NC_037648.1:13500001-14500000 NC_037648.1:14500001-15500000 NC_037648.1:15500001-17500000 :::+ Group11 Group11 Group11 Group11 ::: SA.A SA.C SA.M &> logs/calc_allele_freq_within_ancestry_2OUTLIERS_redo_SA_chr11ABCD.out &
[1] 24470
I CONCATENATE TOGETHER D1D2 -> D and ABCDE:
within_ancestry$ for i in SA.A SA.C SA.M; do (zcat results/combined_sept19/outliers/outlier1_chr1_A/$i.mafs.gz; for j in B C D1 D2 E; do zcat results/combined_sept19/outliers/outlier1_chr1_$j/$i.mafs.gz | tail -n +2; done) | bgzip > results/combined_sept19/outliers/outlier1_chr1/$i.mafs.gz; done
within_ancestry$ for i in SA.A SA.C SA.M; do (zcat results/combined_sept19/outliers/outlier2_chr11_A/$i.mafs.gz; for j in B C D; do zcat results/combined_sept19/outliers/outlier2_chr11_$j/$i.mafs.gz | tail -n +2; done) | bgzip > results/combined_sept19/outliers/outlier2_chr11/$i.mafs.gz; done

I LOAD THE RESULTING FILES AND ALLELE FREQ FILES FOR REFERENCE PANELS INTO R SCRIPT:  plot_pi_fst_outliers

# TO COMPLEMENT THIS ANALYSIS, go back to calculating pi the angsd way. chr3 has no outliers. So I'll start by making pi priors from 1Mb within chr3 and known sites:
# Get random regions: 1000 regions, each 1kb long = 1Mb
# first write bed file with regions to exclude because they're in genome gaps or outlier regions; sort by genome order
within_ancestry$ (cut -f1-3 ../data/honeybee_genome/gaps.bed; cut -f1-3 ../functional_analysis/results/outlier_regions/all.plus20kb.noHeader.bed) | bedtools sort -faidx ../data/honeybee_genome/chr.lengths -i stdin > results/exclude_gaps_outliers.bed
# then select random regions using bedtools
within_ancestry$ bedtools random -g ../data/honeybee_genome/chr.lengths -n 1000 -l 1000 | bedtools shuffle -i stdin -g ../data/honeybee_genome/chr.lengths -noOverlapping -excl results/exclude_gaps_outliers.bed | bedtools sort -faidx ../data/honeybee_genome/chr.lengths -i stdin | cut -f1-3 > results/chr.1Mb.noOutliers.bed
# make regions file
within_ancestry$ awk '{print $1":"$2"-"$3}' results/chr.1Mb.noOutliers.bed > results/chr.1Mb.noOutliers.regions
# now make and index variant sites within those regions ~15K sites
within_ancestry$ (for i in {1..16}; do cat ../geno_lik_and_SNPs/results/combined_sept19/variant_sites/Group$i.var.sites | awk '{print $1"\t"$2-1"\t"$2"\t"$3"\t"$4}'; done) | bedtools intersect -a stdin -b results/chr.1Mb.noOutliers.bed -sorted -g ../data/honeybee_genome/chr.lengths | cut -f1,3,4,5 > results/chr.1Mb.noOutliers.var.sites
# index
within_ancestry$ angsd sites index results/chr.1Mb.noOutliers.var.sites

# calculate background pi
# quick test (starts up ok): worked great, pretty fast too!
within_ancestry$ ./calc_sfs_1MB_background.sh A ../bee_samples_listed/byPop/A.bams
# running all (A finished above):
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/calc_sfs_1MB_background.log './calc_sfs_1MB_background.sh {1} ../bee_samples_listed/byPop/combined_sept19_pops.{1}.bams' ::: SA.A SA.M NA.A NA.M SA.C NA.C &> logs/calc_sfs_1MB_background.out &
[1] 17817 - RUNNING 10.20.19
within_ancestry$ nohup parallel --noswap --jobs 1 --joblog logs/calc_sfs_1MB_background_CM.log './calc_sfs_1MB_background.sh {1} ../bee_samples_listed/byPop/{1}.bams' ::: C M &> logs/calc_sfs_1MB_background_CM.out &
[2] 29588 - RUNNING 10.20.19
# now calculate thetas across the outlier regions of interest using above SFS as priors:
# try ancestry A first, ran great:
within_ancestry$ ./calc_thetas_from_sfs_outliers.sh A ../bee_samples_listed/byPop/A.bams outlier1_chr1 NC_037638.1:5000000-15000000 Group1
# now larger groups (if overwhelms memory, I'll have to block it into smaller pieces): wait ~ 1 hr (4000 seconds) before start:
within_ancestry$ sleep 4000; nohup parallel --noswap --jobs 4 --joblog logs/calc_thetas_outlier_regions.log './calc_thetas_from_sfs_outliers.sh {1} ../bee_samples_listed/byPop/combined_sept19_pops.{1}.bams {2} {3} {4}' ::: SA.A SA.M NA.A NA.M SA.C NA.C ::: outlier1_chr1 outlier2_chr11 :::+ NC_037638.1:5000000-15000000 NC_037648.1:12500000-17500000 :::+ Group1 Group11 &> logs/calc_thetas_outlier_regions.out &
# will start in an hour 10.20.19
# and run C/M too
within_ancestry$ sleep 2000; nohup parallel --noswap --jobs 1 --joblog logs/calc_thetas_outlier_regions_CM.log './calc_thetas_from_sfs_outliers.sh {1} ../bee_samples_listed/byPop/{1}.bams {2} {3} {4}' ::: C M ::: outlier1_chr1 outlier2_chr11 :::+ NC_037638.1:5000000-15000000 NC_037648.1:12500000-17500000 :::+ Group1 Group11 &> logs/calc_thetas_outlier_regions_CM.out &
# will start in half and hour 10.20.19
[1] 29536


# BOOTSTRAP PI WITHIN ANCESTRY ESTIMATES FOR EACH POPULATION:
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/bootstrap_pi_within_ancestry.log 'Rscript ./bootstrap_pi_within.R {1} 100' ::: A C M Combined &> logs/bootstrap_pi_within_ancestry.out &
[1] 4635 -- COMPLETED 1.27.20. BUT A didn't run properly. Trying again:
within_ancestry$ nohup parallel --noswap --joblog logs/bootstrap_pi_within_ancestry_A_retry.log 'Rscript ./bootstrap_pi_within.R {1} 100' ::: A &> logs/bootstrap_pi_within_ancestry_A_retry.out &
[1] 5719 - COMPLETED 1.27.20.
# try a larger bootstrap now (1000):
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/bootstrap_pi_within_ancestry_1000.log 'Rscript ./bootstrap_pi_within.R {1} 1000' ::: A C M Combined &> logs/bootstrap_pi_within_ancestry_1000.out &
[1] 29292 - TOO BIG. CAN'T ALLOCATE MEMORY. SPLIT INTO 9 additional BOOTSTRAPS OF SIZE 100 (name & seed diff) 1.30.20
# 4th argument now sets random seed (1st time seed=100)
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/bootstrap_pi_within_ancestry_900.log 'Rscript ./bootstrap_pi_within.R {1} 100 {2}' ::: A C M Combined ::: {101..109} &> logs/bootstrap_pi_within_ancestry_900.out &
[1] 29404 - STOPPED JOBS WERE GETTING KILLED 1.30.20. Reduce overlap of jobs:
within_ancestry$ nohup parallel --noswap --delay 10s --jobs 2 --joblog logs/bootstrap_pi_within_ancestry_900.log 'Rscript ./bootstrap_pi_within.R {2} 100 {1}' ::: {101..109} ::: A C M Combined &> logs/bootstrap_pi_within_ancestry_900.out &
[1] 29793 - RUNNING 1.30.20. REPEATING THOSE 3 THAT FAILED DUE TO MEMORY CONSTRAINT:
within_ancestry$ nohup parallel --noswap --delay 10s --jobs 1 --joblog logs/bootstrap_pi_within_ancestry_900__failed.log 'Rscript ./bootstrap_pi_within.R {2} 100 {1}' ::: 108 108 109 :::+ A A Combined &> logs/bootstrap_pi_within_ancestry_900_failed.out &
[1] 4437

# REDO BOOTRAP FOR PI WITH A BLOCK BOOTSTRAP:
within_ancestry$ nohup parallel --noswap --jobs 4 --joblog logs/block_bootstrap_pi_within_ancestry.log 'Rscript ./block_bootstrap_pi_within.R {1} 10000 100' ::: A C M Combined &> logs/block_bootstrap_pi_within_ancestry.out &
[1] 3816 - FAILED 2.7.20 because of edge cases with no data. RERUNNING:
[1] 4231 - RUNNING 2.7.20


## (!) NOTE: By breaking the task up into pieces, I may indeed be able to get whole genome SFS estimates for each population,
# within ancestry and across all ancestries. I can create diff saf.idx sites separately for diff regions. I can
# also estimate SFS separately for large # sites, e.g. 1-10Mb using -nSites. Here I'd still want to use called SNPs.
# http://www.popgen.dk/angsd/index.php/RealSFS




# I could alternative, or in addition, visualize within-ancestry associations by PCA


# TRYING AGAIN TO FIGURE OUT WHAT'S UP WITH PI ESTIMATES FROM ANGSD.
# small test case: 5Mb of chr2 (NC_037639.1) from riverside 2014 compared to CA04
# (just N of riverside, from other estimates has nearly identical pi combined, and just a touch lower pi within A)

within_ancestry$ parallel --jobs 2 'angsd -bam ../bee_samples_listed/byPop/{1}.bams -r NC_037639.1:10000000-15000000 -doSaf 1 -out test/small_{1} \
-anc ../data/honeybee_genome/Amel_HAv3.1.fasta -GL 2 -P 4 -minMapQ 30 -minQ 20' ::: Riverside_2014 CA04
# only took <20s each for 1Mb, a few minutes for 5Mb
within_ancestry$ parallel --jobs 2 'realSFS test/small_{1}.saf.idx -maxIter 100 -P 4 > test/small_{1}.sfs' ::: Riverside_2014 CA04
# a few seconds
plotted with within_ancestry/test_sfs.R : within_ancestry/plots/bias_angsd_sfs_example_low_vs_high_coverage.png
# conclusion: ANGSD gives biased SFS for low coverage populations, calling more SNPs than in similar
# high coverage populations, and therefore inflating diversity (pi) estimates for low coverage pops
# The only thing non-standard about my use of ANGSD is lack of an outgroup (I use the european honey bee reference genome instead)
# which should produce more of an uptick at the lower tail of the SFS

## RUNNING PCA WITHIN ANCESTRY:
# first I make 3 lists of all bams for A/C/M reference pops and (filtered for homozygous ancestry) all CA/AR individuals:
bees/within_ancestry$ parallel '(for i in $(cat ../bee_samples_listed/combined_sept19.list); do echo results/combined_sept19/{1}/bams/$i.sort.dedup.baq.bam; done) > results/combined_sept19/{1}/allele_freq/combined_sep19.bams' ::: A C M
# now I get the list of snps used in original PCA/NGSAdmix as a var.sites file (see global_ancestry/commands.txt):
global_ancestry/results/input/combined_sept19_chr_prunedBy250.var.sites
# now I calculate GL's for all ref individuals and within ancestry AR/CA bams:
bees/within_ancestry$ nohup parallel --noswap --joblog logs/calc_GL_by_ACM_and_scaffold.log --jobs 4 './calc_GL_within_ancestry_4PCA.sh {2} combined_sept19 Group{1}' ::: {1..16}  ::: A C M &> logs/calc_GL_by_ACM_and_scaffold.out &
[1] 25367 -- running May 29, 2:30pm
# NOTE: would now add arguments prunedBy250 ../global_ancestry/results/input/combined_sept19_chr_prunedBy250.var.sites
# concatenate these together into 1 GL file per A/C/M ancestry
# make a second GL file per A/C/M ancestry that only includes the reference that matches that ancestry
# concatenate into GL files for all individuals:
bees/within_ancestry$ parallel '(zcat results/combined_sept19/{1}/GL/Group1.beagle.gz | head -n 1; for i in {1..16}; do zcat results/combined_sept19/{1}/GL/Group$i.beagle.gz | tail -n +2; done) | gzip > results/combined_sept19/{1}/GL/all_CA_AR_ACM.beagle.gz' ::: A C M
# make GL files with only the relevant reference + CA + AR individuals
GL file has snp, allele1, allele2, ind0, ind0, ind0 ... ind347, ind347, ind347
ind0-ind8 are C, ind9-ind17 are M, ind18-ind35 are A, ind36-ind347 are from the hybrid zones
# A:
bees/within_ancestry$ zcat results/combined_sept19/A/GL/all_CA_AR_ACM.beagle.gz | cut -f1-3,58-108,109-1047 -d$'\t' | gzip > results/combined_sept19/A/GL/A_CA_AR.beagle.gz
# C:
bees/within_ancestry$ zcat results/combined_sept19/C/GL/all_CA_AR_ACM.beagle.gz | cut -f1-3,4-30,109-1047 -d$'\t' | gzip > results/combined_sept19/C/GL/C_CA_AR.beagle.gz
# M:
bees/within_ancestry$ zcat results/combined_sept19/M/GL/all_CA_AR_ACM.beagle.gz | cut -f1-3,31-57,109-1047 -d$'\t' | gzip > results/combined_sept19/M/GL/M_CA_AR.beagle.gz

# run PCAngsd on each of these GL files.
bees/within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/run_PCA_within_AA_CC_MM.log './runPCAngsd_within_ancestry.sh {1} {2}' ::: all_CA_AR_ACM A_CA_AR all_CA_AR_ACM C_CA_AR all_CA_AR_ACM M_CA_AR :::+ A A C C M M &> logs/run_PCA_within_AA_CC_MM.out &
[1] 26026 COMPLETED (VERY FAST) 6.2.2020 # NOTE: moved results to subdirectory prunedBy250

# redo input files with just CA and AR hybrid zone bees & rerun PCA:
bees/within_ancestry$ nohup parallel --noswap --jobs 3 --joblog logs/run_PCA_CA_AR_only_within_AA_CC_MM.log "zcat results/combined_sept19/{1}/GL/all_CA_AR_ACM.beagle.gz | cut -f1-3,109-1047 -d$'\t' | gzip > results/combined_sept19/{1}/GL/CA_AR.beagle.gz; ./runPCAngsd_within_ancestry.sh CA_AR {1}" ::: A C M &> logs/run_PCA_CA_AR_only_within_AA_CC_MM.out &
[1] 11508 - COMPLETED 6.4.2020 # NOTE: moved results to subdirectory prunedBy250

# plot results.
plotPCA_within_ancestry.R

# possibly repeat 'within European ancestry', e.g. >0.8 posterior probability of being CC, MM, or CM

# there is low pairwise complete entries going into my covariance matrices.
# I think it would be better not to filter for LD in this case and to get more SNPs.
